"""Collect MCMC proposal densities

"""

class ProposalDensity(object):
    """A proposal density for a local-random-walk Markov chain sampler."""

    def evaluate(x, y):
        """Evaluate log of the density to propose ``x`` given ``y``, q(x|y).

        :param x:

            The proposed point.

        :param y:

            The current point of the Markov chain.

        """
        raise NotImplementedError()

    def propose(y, rng):
        """Propose a new point given ``y`` using the random number
        generator ``rng``

        :param y:

            The current position of the chain.

        :param rng:

            The state of a random number generator like numpy.random.mtrand

        """
        raise NotImplementedError()

class AdaptiveProposal(ProposalDensity):
    """Abstract proposal density with adaptation"""

    def adapt(points):
        """Adapt the proposal function based on a sequence of chain
        samples.

        :param points:

            An iterable of points from the chain in the order
            generated by the chain.

        """

class Multivariate(AdaptiveProposal):
    """A multivariate proposal density with covariance adaptation and
    rescaling"""
    pass

