name: Build, Check, and Deploy

on:
  push:
    branches:
      - master
      - testing

  pull_request:
    branches:
      - master

  release:
    types:
      - published

jobs:
  build_wheels:
    strategy:
      matrix:
        include:
          - { version: cp39,  arch: x86_64,  os: ubuntu-20.04 }
          - { version: cp310, arch: x86_64,  os: ubuntu-20.04 }
          - { version: cp311, arch: x86_64,  os: ubuntu-20.04 }
          - { version: cp312, arch: x86_64,  os: ubuntu-20.04 }
          - { version: cp39,  arch: aarch64, os: ubuntu-20.04 }
          - { version: cp310, arch: aarch64, os: ubuntu-20.04 }
          - { version: cp311, arch: aarch64, os: ubuntu-20.04 }
          - { version: cp312, arch: aarch64, os: ubuntu-20.04 }
          - { version: cp39,  arch: x86_64,  os: macOS-latest }
          - { version: cp310, arch: x86_64,  os: macOS-latest }
          - { version: cp311, arch: x86_64,  os: macOS-latest }
          - { version: cp312, arch: x86_64,  os: macOS-latest }
          - { version: cp39,  arch: arm64,   os: macOS-latest }
          - { version: cp310, arch: arm64,   os: macOS-latest }
          - { version: cp311, arch: arm64,   os: macOS-latest }
          - { version: cp312, arch: arm64,   os: macOS-latest }
    name: Build wheels on ${{ matrix.os }}/${{ matrix.arch }} for ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install QEMU and emulation on the Ubuntu runner
        if: runner.os == 'Linux'
        run: sudo apt install qemu-user-static

      - name: Build wheels, install them and run tests
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.version }}-*
          CIBW_SKIP: \*-musllinux_*
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_COMMAND: python3 -m unittest discover -s {package} pypmc -p *_test.py

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.version }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [ build_wheels ]
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: ${{ secrets.PYPI_USER }}
          password: ${{ secrets.PYPI_PASSWORD }}
          skip_existing: true